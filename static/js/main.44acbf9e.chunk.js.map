{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Business","className","src","this","props","business","imageSrc","alt","name","address","city","state","zipCode","category","rating","reviewCount","React","Component","BusinessList","businesses","map","SearchBar","term","location","sortBy","handleTermChange","bind","handleLocationChange","handleSearch","sortByOptions","sortByOption","setState","event","target","value","searchYelp","preventDefault","Object","keys","sortByOptionValue","getSortByClass","key","onClick","handleSortByChange","renderSortByOptions","placeholder","onChange","App","console","log","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.44acbf9e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Business.css';\r\n\r\n\r\nclass Business extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"Business\">\r\n\t\t\t  <div className=\"image-container\">\r\n\t\t\t    <img src={this.props.business.imageSrc} alt=''/>\r\n\t\t\t  </div>\r\n\t\t\t  <h2>{this.props.business.name}</h2>\r\n\t\t\t  <div className=\"Business-information\">\r\n\t\t\t    <div className=\"Business-address\">\r\n\t\t\t      <p>{this.props.business.address}</p>\r\n\t\t\t      <p>{this.props.business.city}</p>\r\n\t\t\t      <p>{this.props.business.state} {this.props.business.zipCode}</p>\r\n\t\t\t    </div>\r\n\t\t\t    <div className=\"Business-reviews\">\r\n\t\t\t      <h3>{this.props.business.category}</h3>\r\n\t\t\t      <h3 className=\"Rating\">{this.props.business.rating} stars</h3>\r\n\t\t\t      <p>{this.props.business.reviewCount} reviews</p>\r\n\t\t\t    </div>\r\n\t\t\t  </div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Business;","import React from 'react';\r\nimport './BusinessList.css';\r\nimport Business from '../Business/Business';\r\n\r\nclass BusinessList extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"BusinessList\">\r\n\t\t\t{\r\n\t\t\t\tthis.props.businesses.map(business => {\r\n\t\t\t\t\treturn <Business business={business} />\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default BusinessList;","import React from 'react';\r\nimport './SearchBar.css';\r\n\r\n\r\nclass SearchBar extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tterm: '',\r\n\t\t\tlocation: '',\r\n\t\t\tsortBy: 'best_match'\r\n\t\t};\r\n\t\tthis.handleTermChange = this.handleTermChange.bind(this);\r\n\t\tthis.handleLocationChange = this.handleLocationChange.bind(this);\r\n\t\tthis.handleSearch = this.handleSearch.bind(this);\r\n\r\n\t\tthis.sortByOptions = {\r\n\t\t  'Best Match': 'best_match',\r\n\t\t  'Highest Rated': 'rating',\r\n\t\t  'Most Reviewed': 'review_count'\r\n\t\t};\r\n\t}\r\n\r\n\tgetSortByClass(sortByOption) {\r\n\t\tif(this.state.sortBy == sortByOption)\r\n\t\t{\r\n\t\t\treturn 'active';\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t}\r\n\r\n\thandleSortByChange(sortByOption) {\r\n\t\tthis.setState({sortBy: sortByOption});\r\n\t}\r\n\r\n\thandleTermChange(event) {\r\n\t\tthis.setState({ term: event.target.value });\r\n\t}\r\n\r\n\thandleLocationChange(event) {\r\n\t\tthis.setState({ location: event.target.value });\r\n\t}\r\n\r\n\thandleSearch(event) {\r\n\t\tthis.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\r\n\t\tevent.preventDefault();\r\n\t}\r\n\r\n\trenderSortByOptions() {\r\n\t\treturn Object.keys(this.sortByOptions).map(sortByOption => {\r\n\t\t\tlet sortByOptionValue = this.sortByOptions[sortByOption];\r\n\t\t\treturn <li \r\n\t\t\t\t\tclassName={this.getSortByClass(sortByOptionValue)}\r\n\t\t\t \t\tkey={sortByOptionValue}\r\n\t\t\t \t\tonClick={this.handleSortByChange.bind(this,sortByOptionValue)}>\r\n\t\t\t \t\t{sortByOption}\r\n\t\t\t \t\t</li>;\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"SearchBar\">\r\n\t\t\t  <div className=\"SearchBar-sort-options\">\r\n\t\t\t    <ul>\r\n\t\t\t    \t{this.renderSortByOptions()}\r\n\t\t\t    </ul>\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"SearchBar-fields\">\r\n\t\t\t    <input \r\n\t\t\t    \tplaceholder=\"Search Businesses\"\r\n\t\t\t    \tonChange={this.handleTermChange} />\r\n\t\t\t    <input \r\n\t\t\t    \tplaceholder=\"Where?\"\r\n\t\t\t    \tonChange={this.handleLocationChange} />\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"SearchBar-submit\">\r\n\t\t\t    <a onClick={this.handleSearch}>Let's Go</a>\r\n\t\t\t  </div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport './App.css';\r\nimport BusinessList from '../BusinessList/BusinessList';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\n\r\nconst business = {\r\n  imageSrc: 'https://s3.amazonaws.com/codecademy-content/programs/react/ravenous/pizza.jpg',\r\n  name: 'MarginOtto Pizzeria',\r\n  address: '1010 Paddington Way',\r\n  city: 'Flavortown',\r\n  state: 'NY',\r\n  zipCode: '10101',\r\n  category: 'Italian',\r\n  rating: 4.5,\r\n  reviewCount: 90\r\n};\r\n\r\nconst businesses = [\r\n\tbusiness,\r\n\tbusiness,\r\n\tbusiness,\r\n\tbusiness,\r\n\tbusiness,\r\n\tbusiness\r\n];\r\n\r\nclass App extends React.Component {\r\n\r\n  searchYelp(term,location,sortBy) {\r\n    console.log(\"Searching Yelp with Pizza, Brooklyn, best_match\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div className=\"App\">\r\n      <h1>ravenous</h1>\r\n      <SearchBar searchYelp={this.searchYelp} />\r\n      <BusinessList businesses={businesses}/>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}